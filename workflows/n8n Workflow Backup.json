{
  "active": true,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-04-23T13:40:09.174Z",
  "id": "2",
  "name": "n8n Workflow Backup",
  "nodes": [
    {
      "parameters": {},
      "id": "dd0c7c4d-63de-433f-bc7d-071fcb4abb80",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -705,
        515
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "e5014372-d756-4604-ab30-308615b82b35",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        140,
        480
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubOAuth2Api": {
          "id": "3",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "f23e300f-1a29-449e-a4c1-3efaa018ae56",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        780,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "6884c4ee-d04c-4c91-946d-20f567a25ba3",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1020,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a65f1591-29fa-4889-8a11-dc3d28bb1392",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1020,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "2509915f-6077-4ff2-914e-718b49686ac5",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1020,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "97c704c7-272d-4845-b46a-45e1cc35fd1a",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        1200,
        620
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "4",
          "name": "GitHub"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "72c6f834-d94a-4140-aafe-0130be725176",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        1200,
        800
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "4",
          "name": "GitHub"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "7aa1d4f0-31f1-4278-bf2f-f31526ac7930",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -80,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "jwowk-hpne"
            },
            {
              "name": "repo.name",
              "value": "n8n-backups"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "f3a9715c-3a5d-4f0d-88cc-a4ddeb908014",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -520,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "81acbbde-e6ba-49dc-ba43-5e13fbe5afb2",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -705,
        775
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "9b4bb399-5bdd-49e4-97de-ca6b587839c0",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1160,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "12cf2448-3640-4e9f-8156-a240b71b9825",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -100,
        360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "9e2d3032-dcab-4c41-bdda-77f37f787b2e",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        740,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {}
      },
      "id": "bb0b3fa4-da93-4448-a618-19069762faed",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -320,
        640
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "2",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "53dd2c72-d4c2-447e-98a9-18f9cdfa8bd7",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        540,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "e51d0e4f-f737-4de7-82e7-758bcdf28e6f",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        360,
        620
      ],
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "id": "6",
      "createdAt": "2023-06-09T19:53:13.180Z",
      "updatedAt": "2023-06-09T19:53:13.180Z",
      "name": "Enabled"
    },
    {
      "id": "10",
      "createdAt": "2023-06-09T19:57:16.990Z",
      "updatedAt": "2023-06-09T19:57:16.990Z",
      "name": "n8n"
    },
    {
      "id": "11",
      "createdAt": "2023-06-09T19:57:28.890Z",
      "updatedAt": "2023-06-09T19:57:28.890Z",
      "name": "Trigger:Date/Time"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2023-06-09T19:57:30.000Z",
  "versionId": "7c2f64a7-c092-4cbe-bad2-f55497561fe2"
}